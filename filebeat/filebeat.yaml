filebeat.prospectors:
  - type: log
    paths:
      - /data/logs/web.log
    fields:
        service: spring-service
        log_type: log4j
    multiline.pattern: '^[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}'
    multiline.negate: true
    multiline.match: after
    exclude_files: [".gz$"]

  - type: log
    fields:
      service: python-service
      log_type: python-logging
    paths: ['/data/logs/python/*.log']
    multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
    multiline.negate: true
    multiline.match: after
    exclude_files: [".gz$"]

  - type: log
    fields:
      service: spring-web
      log_type: tomcat
    paths: ['/data/logs/tomcat/*.log']
    multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{3}'
    multiline.negate: true
    multiline.match: after
    exclude_files: [".gz$"]

  - type: log
    paths: ['/data/logs/*-warg.log']
    fields:
      service: spring-web-access
      log_type: log4j
    multiline.pattern: '^\['
    multiline.negate: true
    multiline.match: after
    exclude_files: [".gz$"]

  - type: log
    paths: ['/data/logs/error*.log']
    fields:
      service: spring-web-error
      log_type: log4j
    multiline.pattern: "^\s"
    multiline.negate: true
    multiline.match: before
    exclude_files: [".gz$"]

filebeat.modules:
  - module: system
    syslog:
      enabled: true
    auth:
      enabled: true

  - module: auditd
    log:
      enabled: true

  - module: nginx
    access:
      enabled: true
      var.paths: ["/data/logs/nginx/access.log*"]
    error:
      enabled: true
      var.paths: ["/data/logs/nginx/error.log*"]

  - module: mysql
    error:
      enabled: true
      var.paths:
        - /data/logs/mysql/error.log*
        - /data/logs/mysqld.log*
    slowlog:
      enabled: true
      var.paths:
        - /data/logs/mysql/mysql-slow.log*
        - /var/lib/mysql/{{.builtin.hostname}}-slow.logs
  - module: redis
    log:
      enabled: true
      var.paths:
        - /data/logs/redis/redis-server.log*
    log:
      enabled: true
      var.paths:
        - /data/logs/redis/redis-server.log*
    slowlog:
      var.hosts:
        - "localhost:6379"
      var.password: ""

queue.mem:
  events: 8192
  flush.min_events: 512
  flush.timeout: 5s

output.logstash:
    hosts: ["logstash1.meizu.mz:5044","logstash2.meizu.mz:5044"]
    bulk_max_size: 1024
    loadbalance: true
    worker: 16

#output.elasticsearch:
#  hosts: ["http://es1.meizu.mz:9200","http://es2.meizu.mz:9200"]
#  loadbalance: true
#  worker: 16

#output.kafka:
#  # initial brokers for reading cluster metadata
#  hosts: ["kafka1:9092", "kafka2:9092", "kafka3:9092"]
#  # message topic selection + partitioning
#  topic: '%{[fields.log_topic]}'
#  partition.round_robin:
#    reachable_only: false
#  required_acks: 1
#  compression: snappy
#  max_message_bytes: 1000000

setup.kibana:
  host: "kibana.meizu.mz:5601"
  enabled: true

logging.level: warning
logging.to_files: true
logging.to_syslog: false
logging.files:
  path: /var/log/filebeat
  name: filebeat.log
  keepfiles: 7
  permissions: 0644


setup.template.name: "filebeat"
setup.template.fields: "fields.yml"
setup.template.overwrite: false
setup.template.settings:
  index.number_of_shards: 32
  index.number_of_replicas: 2

#filebeat.autodiscover:
#  providers:
#    - type: docker
#      templates:
#        - condition:
#            equals:
#              docker.container.image: redis
#          config:
#            - type: docker
#              containers.ids:
#                - "${data.docker.container.id}"
#              exclude_lines: ["^\\s+[\\-`('.|_]"]