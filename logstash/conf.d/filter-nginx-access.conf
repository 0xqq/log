filter {
  if [type] == "nginx_access" {
  
      json {
        source => "message"
      }

      mutate {
        convert => ["size", "integer", "responsetime", "float", "upstream_response_time", "float"]
      }

      if [http_cookie] {
        kv {
          prefix => "cookie_"
          source => "http_cookie"
          field_split => "; "
        }
      }
      if [request] {
          ruby {
            init => "@kname = ['method','uri','verb']"
            code => "
                new_event = LogStash::Event.new(Hash[@kname.zip(event.get('request').split(' '))])
                new_event.remove('@timestamp')
                event.append(new_event)""
            "
          }
          if [uri] {
              ruby {
                init => "@kname = ['url_path','url_args']"
                code => "
                    new_event = LogStash::Event.new(Hash[@kname.zip(event.get('uri').split('?'))])
                    new_event.remove('@timestamp')
                    event.append(new_event)""
                "
              }
              kv {
                prefix => "url_"
                source => "url_args"
                field_split => "& "
                remove_field => [ "url_args","uri","request" ]
              }
          }
      }
      mutate {
        convert => [
          "body_bytes_sent" , "integer",
          "content_length", "integer",
          "upstream_response_time", "float",
          "request_time", "float"
        ]
      }
      date {
        match => [ "time_local", "dd/MMM/yyyy:hh:mm:ss Z" ]
        locale => "en"
      }

  }
}
