filter {
  if [type] == "mysql_slow" {
      # drop sleep events
      grok {
          match => { "message" => "SELECT SLEEP" }
          add_tag => [ "sleep_drop" ]
          tag_on_failure => [] # prevent default _grokparsefailure tag on real records
      }
      if "sleep_drop" in [tags] {
          drop {}
      }

      grok {
        match => { "message" => "(?m)^#\s+User@Host:\s+%{USER:user}\[[^\]]+\]\s+@\s+(?:(?<clienthost>\S*) )?\[(?:%{IPV4:clientip})?\]\s+Id:\s+%{NUMBER:row_id:int}\n#\s+Query_time:\s+%{NUMBER:query_time:float}\s+Lock_time:\s+%{NUMBER:lock_time:float}\s+Rows_sent:\s+%{NUMBER:rows_sent:int}\s+Rows_examined:\s+%{NUMBER:rows_examined:int}\n\s*(?:use %{DATA:database};\s*\n)?SET\s+timestamp=%{NUMBER:timestamp};\n\s*(?<sql>(?<action>\w+)\b.*;)\s*(?:\n#\s+Time)?.*$" }
      }
      date {
        match => [ "timestamp", "UNIX", "YYYY-MM-dd HH:mm:ss"]
        remove_field => [ "timestamp" ]
      }
  }
}